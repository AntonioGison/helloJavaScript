{"ast":null,"code":"var _jsxFileName = \"/Users/antonio/Desktop/codecademy/helloJavaScript/JSX_REACT_/React/Router/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js\";\nimport React from \"react\";\nimport ContactPicker from '';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nexport const AppointmentForm = _ref => {\n  let {\n    name,\n    contacts,\n    title,\n    setTitle,\n    contact,\n    setContact,\n    date,\n    setName,\n    setDate,\n    time,\n    setTime,\n    handleSubmit\n  } = _ref;\n  const handleName = e => {\n    setName(e.target.value);\n  };\n  const handleDate = e => {\n    setDate(e.target.value);\n  };\n  const handleTime = e => {\n    setTime(e.target.value);\n  };\n\n  // AppointmentForm Requirements:\n\n  // Render a form with:\n  // A ContactPicker component with the contacts list passed in via props\n  // A submit button\n  // Use getTodayString() to set the min attribute of the date input\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        placeholder: \"Name\",\n        type: \"text\",\n        onChange: handleName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: date,\n        placeholder: \"Date\",\n        type: \"date\",\n        onChange: handleDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: time,\n        placeholder: \"Time\",\n        type: \"time\",\n        onChange: handleTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactPicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","ContactPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","AppointmentForm","_ref","name","contacts","title","setTitle","contact","setContact","date","setName","setDate","time","setTime","handleSubmit","handleName","e","target","value","handleDate","handleTime","children","onSubmit","placeholder","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/antonio/Desktop/codecademy/helloJavaScript/JSX_REACT_/React/Router/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import React from \"react\";\r\nimport ContactPicker from ''\r\n\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date()\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const AppointmentForm = ({name,contacts,title,setTitle,contact,setContact,date,setName,setDate,time,setTime,handleSubmit}) => {\r\n\r\n\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleDate = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  const handleTime = (e) => {\r\n    setTime(e.target.value);\r\n  };\r\n\r\n// AppointmentForm Requirements:\r\n\r\n// Render a form with:\r\n// A ContactPicker component with the contacts list passed in via props\r\n// A submit button\r\n// Use getTodayString() to set the min attribute of the date input\r\n\r\n\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit}>\r\n      <input value={name} placeholder=\"Name\" type=\"text\" onChange={handleName}/>\r\n      <input value={date} placeholder=\"Date\" type=\"date\" onChange={handleDate}/>\r\n      <input value={time} placeholder=\"Time\" type=\"time\" onChange={handleTime}/>\r\n      <ContactPicker />\r\n    </form>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,EAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAM,CAACC,KAAK,EAAEC,GAAG,EAAEC,IAAI,CAAC,GAAG,IAAIC,IAAI,EAAE,CAClCC,kBAAkB,CAAC,OAAO,CAAC,CAC3BC,KAAK,CAAC,GAAG,CAAC;EACb,OAAQ,GAAEH,IAAK,IAAGF,KAAK,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGL,GAAG,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;AACpE,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAAsG;EAAA,IAArG;IAACC,IAAI;IAACC,QAAQ;IAACC,KAAK;IAACC,QAAQ;IAACC,OAAO;IAACC,UAAU;IAACC,IAAI;IAACC,OAAO;IAACC,OAAO;IAACC,IAAI;IAACC,OAAO;IAACC;EAAY,CAAC,GAAAZ,IAAA;EAG9H,MAAMa,UAAU,GAAIC,CAAC,IAAK;IACxBN,OAAO,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,UAAU,GAAIH,CAAC,IAAK;IACxBL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAME,UAAU,GAAIJ,CAAC,IAAK;IACxBH,OAAO,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;;EAEH;;EAEA;EACA;EACA;EACA;;EAGE,oBACE5B,OAAA,CAAAE,SAAA;IAAA6B,QAAA,eACA/B,OAAA;MAAMgC,QAAQ,EAAER,YAAa;MAAAO,QAAA,gBAC3B/B,OAAA;QAAO4B,KAAK,EAAEf,IAAK;QAACoB,WAAW,EAAC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEV;MAAW;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC1EvC,OAAA;QAAO4B,KAAK,EAAET,IAAK;QAACc,WAAW,EAAC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEN;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC1EvC,OAAA;QAAO4B,KAAK,EAAEN,IAAK;QAACW,WAAW,EAAC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEL;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC1EvC,OAAA,CAACF,aAAa;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACZ,iBACJ;AAEP,CAAC;AAACC,EAAA,GAjCW7B,eAAe;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}